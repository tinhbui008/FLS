{"version":3,"file":"component---src-templates-news-landing-js-9a1e7ed7de3e209ebacf.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Header/TopHeader.jsx","webpack://gatsby-starter-default/./src/components/PageBackgrounds/TopRightCircle.jsx","webpack://gatsby-starter-default/./src/components/SinglePost/SinglePost.jsx","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/templates/news-landing.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nfunction TopHeader({ bgColour }) {\n  let backgroundColour = \"bg-white\"\n  if (bgColour === \"blue\") {\n    backgroundColour = \"bg-light_blue\"\n  }\n\n  return (\n    <div className={` ${backgroundColour} px-12 py-10 lg:hidden `}>\n      <div className=\"logo w-32 \">\n        <Link to=\"/\">\n          <StaticImage\n            src={\"../../images/logo/fls_logo_white.svg\"}\n            alt=\"Logo\"\n          ></StaticImage>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default TopHeader\n","import React from \"react\"\nimport \"./index.scss\"\n\nfunction TopRightCircle({ pageColour }) {\n  let stroke = \"#9fc2e0\"\n  let textColour = \"text-white/60\"\n\n  if (pageColour == \"white\") {\n    stroke = \"#afb3b8\"\n    textColour = \"text-black/30\"\n  }\n\n  return (\n    <div className=\"internal absolute z-10 top-0 right-0 overflow-hidden pointer-events-none\">\n      <div className=\" absolute top-10 right-4 lg:right-20 w-fit text-xl\">\n        <p\n          className={`${textColour} conthrax-bold uppercase text-xs lg:text-base`}\n        >\n          13.7781\n        </p>\n        <p\n          className={`${textColour} conthrax-bold uppercase text-xs lg:text-base`}\n        >\n          100.443412\n        </p>\n      </div>\n      <svg className=\"svg-circle-dash absolute\">\n        <circle\n          id=\"svg-circle\"\n          stroke={stroke}\n          className=\"svg-circle\"\n          cx=\"210\"\n          cy=\"210\"\n          r=\"200\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default TopRightCircle\n","import { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport \"./singlePost.scss\"\n\nfunction SinglePost({ postData }) {\n  const image = getImage(postData?.featuredImage?.node.localFile)\n\n  return (\n    <>\n      <Link\n        to={`/news/${postData?.slug}`}\n        className={`col-span-1 mb-6 h-auto card relative post-item flex flex-col`}\n      >\n        <div className=\"absolute inset-0 bg-slate-900 z-[1] opacity-50 lg:hidden\"></div>\n        <div className=\"static lg:relative post-image h-full\">\n          <GatsbyImage className=\"w-full\" image={image} alt={postData?.title} />\n        </div>\n        <div className=\"z-[2] mt-auto absolute lg:static w-full bottom-0 left-0\">\n          {postData?.date && (\n            <p className=\"text-neutral-300 lg:my-2 pl-[1rem] lg:pl-0\">\n              {postData?.date}\n            </p>\n          )}\n          {postData?.title && (\n            <div className=\"image-text z-10\">\n              {\" \"}\n              <h5 className=\"post-title text-white uppercase text-left text-sm lg:text-base text-ellipsis overflow-hidden\">\n                {postData?.title}\n              </h5>\n            </div>\n          )}\n\n          {postData?.excerpt && <div\n            className=\"excerpt text-white text-left text-xs lg:text-base mb-5 lg:mb-0 lg:mt-2  text-ellipsis overflow-hidden leading-6 \"\n            dangerouslySetInnerHTML={{ __html: postData?.excerpt }}\n          ></div>}\n        </div>\n      </Link>\n    </>\n  )\n}\nexport default SinglePost\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport PropTypes from \"prop-types\"\nimport * as React from \"react\"\nimport { Header } from \"../components/Header/Header\"\nimport TopHeader from \"../components/Header/TopHeader\"\nimport TopRightCircle from \"../components/PageBackgrounds/TopRightCircle\"\nimport Footer from \"./Footer/Footer\"\nimport \"./layout.css\"\nimport { NewsSidebar } from \"./NewsSidebar/NewsSidebar\"\n\nconst Layout = ({ children, title }) => {\n  const footerRef = React.useRef()\n  return (\n    <>\n      <div className=\"internal-pages\">\n        <div className=\"absolute w-16 left-0 top-0 z-10\">\n          <StaticImage\n            src={\"../../images/white-corner.png\"}\n            alt=\"white-corner\"\n          />\n        </div>\n        <TopRightCircle />\n        <Header bgColour={\"blue\"} footerRef={footerRef} />\n        <NewsSidebar whiteButton={true} />\n        <TopHeader bgColour=\"blue\" />\n\n        <div className=\"bg-light_blue pb-12 lg:py-12 lg:pt-32 lg:pl-[200px] xl:pl-[50px]\">\n          <main className=\"container z-30 mx-auto px-12 xl:pr-[8rem] xl:pl-[12rem]\">\n            <h1 className=\"text-white text-[24px] lg:text-6xl uppercase mb-12 lg:mb-20 col-span-2\">\n              {title}\n            </h1>\n            {children}\n          </main>\n        </div>\n      </div>\n      <Footer ref={footerRef} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport SinglePost from \"../components/SinglePost/SinglePost\"\n\nfunction News({ data }) {\n  // get all post\n  const allPost = data.allWpPost.nodes\n  // get all category\n  const allCategories = data.allWpCategory.nodes\n\n  // filter post by category\n  const getCategory = (posts, categoryName) => {\n    return posts.filter(post => {\n      return post.categories.nodes.some(category => {\n        return category.name.includes(categoryName)\n      })\n    })\n  }\n  // get post by category\n  let categories = {}\n  allPost.forEach(post => {\n    post.categories.nodes.forEach(category => {\n      if (!categories[category.name]) {\n        categories[category.name] = [...getCategory(allPost, category.name)]\n      }\n    })\n  })\n\n  // generator category slug\n  function generatorSlug(string) {\n    return string\n      .toString()\n      .trim()\n      .toLowerCase()\n      .replace(/\\s+/g, \"-\")\n      .replace(/[^\\w\\-]+/g, \"\")\n      .replace(/\\-\\-+/g, \"-\")\n      .replace(/^-+/, \"\")\n      .replace(/-+$/, \"\")\n  }\n  return (\n    <Layout title={\"News\"}>\n      <Seo title={\"News - FLS\"} />\n      <section className=\" bg-light_blue relative\">\n        <div className=\"\">\n          <div className=\"\">\n            <div className=\"main-content\">\n              {/* start loop through Categories */}\n              {Object.keys(categories).map((category, index) => {\n                return (\n                  <div key={index} className=\"category\">\n                    <h5 className=\"text-white text-2xl lg:text-4xl mt-5 uppercase\">\n                      {category}\n                    </h5>\n                    <p className=\"text-white mt-6 mb-7\">\n                      {allCategories[index]?.description}\n                    </p>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 lg:grid-row-2 md:gap-x-4 lg:gap-x-16\">\n                      {/* start loop through Post */}\n                      {categories[category].slice(0, 3).map(post => {\n                        return <SinglePost postData={post} key={post.id} />\n                      })}\n                      {/* end loop Post */}\n                      <Link\n                        to={`/news/${generatorSlug(category)}`}\n                        className=\" text-white hover:text-orange-500 md:col-span-2 mb-4 md:col-start-1 gotham-bold\"\n                      >\n                        Read more...\n                      </Link>\n                    </div>\n                  </div>\n                )\n              })}\n              {/* end loop Categories */}\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\nexport const pageQuery = graphql`\n  query {\n    allWpPost(sort: { fields: [date], order: DESC }) {\n      nodes {\n        title\n        id\n        excerpt\n        slug\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          node {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 688\n                    height: 458\n                    transformOptions: {cropFocus: NORTH, fit: COVER}\n                  )\n              }\n            }\n          }\n        }\n        categories {\n          nodes {\n            name\n            slug\n            description\n          }\n        }\n      }\n    }\n    allWpCategory {\n      nodes {\n        description\n      }\n    }\n  }\n`\nexport default News\n"],"names":["_ref","bgColour","backgroundColour","React","className","Link","to","StaticImage","src","alt","__imageData","require","pageColour","stroke","textColour","id","cx","cy","r","_postData$featuredIma","postData","image","getImage","featuredImage","node","localFile","slug","GatsbyImage","title","date","excerpt","dangerouslySetInnerHTML","__html","children","footerRef","TopRightCircle","Header","NewsSidebar","whiteButton","TopHeader","Footer","ref","data","allPost","allWpPost","nodes","allCategories","allWpCategory","categories","forEach","post","category","getCategory","posts","categoryName","name","_toConsumableArray","filter","some","includes","Layout","Seo","Object","keys","map","index","_allCategories$index","string","key","description","slice","SinglePost","toString","trim","toLowerCase","replace"],"sourceRoot":""}