{"version":3,"file":"component---src-templates-quality-safety-standards-js-c2b1868dacc125ccc34a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/PageBackgrounds/TopRightCircle.jsx","webpack://gatsby-starter-default/./src/components/Header/TopHeaderWhite.jsx","webpack://gatsby-starter-default/./src/components/white-internal-layout.js","webpack://gatsby-starter-default/./src/templates/quality-safety-standards.js"],"sourcesContent":["import React from \"react\"\nimport \"./index.scss\"\n\nfunction TopRightCircle({ pageColour }) {\n  let stroke = \"#9fc2e0\"\n  let textColour = \"text-white/60\"\n\n  if (pageColour == \"white\") {\n    stroke = \"#afb3b8\"\n    textColour = \"text-black/30\"\n  }\n\n  return (\n    <div className=\"internal absolute z-10 top-0 right-0 overflow-hidden pointer-events-none\">\n      <div className=\" absolute top-10 right-4 lg:right-20 w-fit text-xl\">\n        <p\n          className={`${textColour} conthrax-bold uppercase text-xs lg:text-base`}\n        >\n          13.7781\n        </p>\n        <p\n          className={`${textColour} conthrax-bold uppercase text-xs lg:text-base`}\n        >\n          100.443412\n        </p>\n      </div>\n      <svg className=\"svg-circle-dash absolute\">\n        <circle\n          id=\"svg-circle\"\n          stroke={stroke}\n          className=\"svg-circle\"\n          cx=\"210\"\n          cy=\"210\"\n          r=\"200\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default TopRightCircle\n","import { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nfunction TopHeaderWhite({ darkMode }) {\n  return (\n    <div\n      className={`${\n        darkMode ? \"bg-neutral-900\" : \"bg-white\"\n      }  2 px-12 py-10 lg:hidden `}\n    >\n      <div className=\"logo w-32 \">\n        <Link to=\"/\">\n          <StaticImage\n            src={\"../../images/logo/fls-logo-tagline-blue.svg\"}\n            alt=\"Logo FLS\"\n          ></StaticImage>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default TopHeaderWhite\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport PropTypes from \"prop-types\"\nimport * as React from \"react\"\nimport Footer from \"../components/Footer/Footer\"\nimport { Header } from \"../components/Header/Header\"\nimport TopRightCircle from \"../components/PageBackgrounds/TopRightCircle\"\nimport Seo from \"../components/seo\"\nimport TopHeaderWhite from \"./Header/TopHeaderWhite\"\nimport { NewsSidebar } from \"./NewsSidebar/NewsSidebar\"\n\nconst WhiteInternalLayout = ({\n  children,\n  title,\n  newsPost,\n  darkMode,\n  className,\n}) => {\n  const footerRef = React.useRef()\n  return (\n    <>\n      <div className=\"internal-pages\">\n        <Seo title={title} />\n        <div className=\"absolute w-16 left-0 top-0 z-10\">\n          <StaticImage src={\"../../images/blue-corner.png\"} alt=\"blue-corner\" />\n        </div>\n        <TopRightCircle pageColour={darkMode ? \"\" : \"white\"} />\n        <Header\n          bgColour={darkMode ? \"blue\" : \"white\"}\n          newsPost={newsPost}\n          footerRef={footerRef}\n        />\n        <NewsSidebar whiteButton={false} />\n        <TopHeaderWhite darkMode={darkMode} />\n\n        <div\n          className={`${\n            darkMode ? \" bg-neutral-900\" : \"bg-white\"\n          } pb-12 lg:py-12 lg:pt-32`}\n        >\n          <main className=\"container z-30 mx-auto px-12 lg:pl-[220px] 2xl:pl-[15rem]\">\n            <h1\n              className={`text-light_blue uppercase mb-12 text-[24px] md:text-[50px] lg:text-[70px] ${\n                newsPost ? \"lg:text-[34px]\" : \"\"\n              } ${className || \"\"}`}\n            >\n              {title}\n            </h1>\n            {children}\n          </main>\n        </div>\n      </div>\n      <Footer ref={footerRef} />\n    </>\n  )\n}\n\nWhiteInternalLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default WhiteInternalLayout\n","import { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\"\nimport React, { useState } from \"react\"\nimport \"swiper/css\"\nimport \"swiper/css/navigation\"\nimport { Swiper, SwiperSlide } from \"swiper/react\"\nimport \"../components/safety-standards/safety-standards.scss\"\nimport \"../styles/swiper-arrow.scss\"\nimport Seo from \"../components/seo\"\nimport WhiteInternalLayout from \"../components/white-internal-layout\"\n\nconst SafetyQuality = ({ data }) => {\n  let page = data.wpPage\n  let certificates = page.template.safetyQualityStandards.certificates\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const [keyModal, setKeyModal] = useState(0)\n\n  return (\n    <>\n      <WhiteInternalLayout title={page.title}>\n        <Seo\n          title={data.wpPage.seo?.title}\n          description={data.wpPage.seo?.metaDesc}\n          featuredImage={\n            data.wpPage.seo?.opengraphImage?.localFile.childImageSharp\n              .gatsbyImageData\n          }\n        />\n        <section className=\"safety-standards_single px-auto\">\n          <div\n            className=\"rich-text-editor\"\n            dangerouslySetInnerHTML={{ __html: page.content }}\n          ></div>\n\n          <Swiper\n            slidesPerView={1}\n            breakpoints={{\n              320: {\n                slidesPerView: 1,\n              },\n              768: { slidesPerView: 2 },\n              1280: { slidesPerView: 3 },\n              1440: { slidesPerView: 4 },\n            }}\n            spaceBetween={30}\n            cssMode={true}\n            navigation={true}\n            pagination={false}\n            mousewheel={true}\n            keyboard={true}\n            className=\"mySwiper swiper_safety white-layout\"\n          >\n            {certificates.map((cert, index) => {\n              return (\n                <SwiperSlide key={index}>\n                  <button\n                    id={index}\n                    className=\"openModalBtn\"\n                    onClick={() => {\n                      setModalOpen(true)\n                      setKeyModal(index)\n                    }}\n                  >\n                    <div\n                      style={{\n                        transition: \"box-shadow 0.2s ease\",\n                        backgroundImage: `url(${cert.certificateThumbnail?.sourceUrl})`,\n                        backgroundSize: \"100% 100%\",\n                        backgroundRepeat: \"no-repeat\",\n                      }}\n                      className=\"shadow-xl hover:shadow-[#093e69cb] overflow-hidden card_safety relative border-2 border-white col-span-3 w-[9rem] h-[10rem] mx-2\"\n                    >\n                      <div className=\"absolute inset-0 bg-light_blue/90\"></div>\n                      <div className=\"absolute\">\n                        <StaticImage\n                          className=\"w-12\"\n                          src={\"../../images/white-corner.png\"}\n                          alt=\"Curved Corner\"\n                        />\n                      </div>\n\n                      <div className=\" flex flex-col justify-center absolute left-0\">\n                        <p className=\"text-white text-left p-4 text-sm\">\n                          {cert.certificateName}\n                        </p>\n                      </div>\n                    </div>\n                  </button>\n                </SwiperSlide>\n              )\n            })}\n            {/* 1. move modal outside Swipper\n                2. when Click each certificate we will get index of it and set new value for \"keyModal\" state. (see line 102)\n                3. use \"keyModal\" state to get exact item in \"certificates\" Array. \n            */}\n\n            <Modal\n              modalOpen={modalOpen}\n              setModalOpen={setModalOpen}\n              imageData={certificates[keyModal].certificateImage?.localFile}\n              downloadLink={\n                certificates[keyModal].certificatePdfDownload?.localFile?.url\n              }\n            />\n          </Swiper>\n        </section>\n      </WhiteInternalLayout>\n    </>\n  )\n}\n\nexport default SafetyQuality\n\nconst Modal = ({ setModalOpen, imageData, downloadLink, modalOpen }) => {\n  const image = imageData\n\n  return (\n    <>\n      {\" \"}\n      <div\n        className=\"fixed z-10 inset-0 overflow-y-auto cert-modal\"\n        aria-labelledby=\"modal-title\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        style={{\n          visibility: modalOpen ? \"visible\" : \"hidden\",\n          opacity: modalOpen ? \"1\" : \"0\",\n          transition: \"all 0.2s ease\",\n        }}\n      >\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <button\n            onClick={() => {\n              setModalOpen(false)\n            }}\n            type=\"button\"\n          >\n            <div\n              className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity \"\n              aria-hidden=\"true\"\n            ></div>\n          </button>\n\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <div className=\"inline-block align-bottom text-left overflow-hidden  transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n            <div>\n              <GatsbyImage image={getImage(image)} alt=\"Certificate\" />\n            </div>\n            {downloadLink ? (\n              <a href={downloadLink} target=\"_blank\">\n                <div className=\"flex flex-row mt-4\">\n                  <StaticImage\n                    src={\"../../images/download-cloud.png\"}\n                    className=\"w-8 mr-4\"\n                    alt=\"Download icon\"\n                  />\n                  <p className=\"uppercase text-lg text-white\">Download</p>\n                </div>\n              </a>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    wpPage(slug: { eq: $slug }) {\n      title\n      content\n      slug\n      seo {\n        title\n        metaDesc\n        opengraphTitle\n        opengraphDescription\n        opengraphImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(layout: FIXED, width: 1200)\n            }\n          }\n        }\n        twitterTitle\n        twitterDescription\n        twitterImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(layout: FIXED, width: 1200)\n            }\n          }\n        }\n      }\n      template {\n        ... on WpTemplate_QualitySafetyStandards {\n          templateName\n          safetyQualityStandards {\n            certificates {\n              certificatePdfDownload {\n                localFile {\n                  url\n                }\n              }\n              certificateImage {\n                uri\n                title\n                slug\n                localFile {\n                  childImageSharp {\n                    gatsbyImageData(width: 700, height: 900)\n                  }\n                }\n              }\n              certificateThumbnail {\n                slug\n                title\n                uri\n                sourceUrl\n              }\n              certificateName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","pageColour","stroke","textColour","React","className","id","cx","cy","r","darkMode","Link","to","StaticImage","src","alt","__imageData","require","children","title","newsPost","footerRef","Seo","__error","TopRightCircle","Header","bgColour","NewsSidebar","whiteButton","TopHeaderWhite","Footer","ref","_data$wpPage$seo","_data$wpPage$seo2","_data$wpPage$seo3","_data$wpPage$seo3$ope","_certificates$keyModa","_certificates$keyModa2","_certificates$keyModa3","data","page","wpPage","certificates","template","safetyQualityStandards","modalOpen","setModalOpen","useState","keyModal","setKeyModal","WhiteInternalLayout","seo","description","metaDesc","featuredImage","opengraphImage","localFile","childImageSharp","gatsbyImageData","dangerouslySetInnerHTML","__html","content","Swiper","slidesPerView","breakpoints","spaceBetween","cssMode","navigation","pagination","mousewheel","keyboard","map","cert","index","_cert$certificateThum","SwiperSlide","key","onClick","style","transition","backgroundImage","certificateThumbnail","sourceUrl","backgroundSize","backgroundRepeat","certificateName","Modal","imageData","certificateImage","downloadLink","certificatePdfDownload","url","_ref2","image","role","visibility","opacity","type","GatsbyImage","getImage","href","target"],"sourceRoot":""}